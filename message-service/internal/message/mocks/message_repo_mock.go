// Code generated by MockGen. DO NOT EDIT.
// Source: message-service//internal/message/ports/message_repo.go
//
// Generated by this command:
//
//	mockgen -source=message-service//internal/message/ports/message_repo.go -destination=message-service//internal/message/mocks/message_repo_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	model "github.com/Vovarama1992/go-ai-messenger/message-service/internal/message/model"
	gomock "go.uber.org/mock/gomock"
)

// MockMessageRepo is a mock of MessageRepo interface.
type MockMessageRepo struct {
	ctrl     *gomock.Controller
	recorder *MockMessageRepoMockRecorder
	isgomock struct{}
}

// MockMessageRepoMockRecorder is the mock recorder for MockMessageRepo.
type MockMessageRepoMockRecorder struct {
	mock *MockMessageRepo
}

// NewMockMessageRepo creates a new mock instance.
func NewMockMessageRepo(ctrl *gomock.Controller) *MockMessageRepo {
	mock := &MockMessageRepo{ctrl: ctrl}
	mock.recorder = &MockMessageRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageRepo) EXPECT() *MockMessageRepoMockRecorder {
	return m.recorder
}

// GetByChat mocks base method.
func (m *MockMessageRepo) GetByChat(chatID int64, limit, offset int) ([]model.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByChat", chatID, limit, offset)
	ret0, _ := ret[0].([]model.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByChat indicates an expected call of GetByChat.
func (mr *MockMessageRepoMockRecorder) GetByChat(chatID, limit, offset any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByChat", reflect.TypeOf((*MockMessageRepo)(nil).GetByChat), chatID, limit, offset)
}

// Save mocks base method.
func (m *MockMessageRepo) Save(message *model.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", message)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockMessageRepoMockRecorder) Save(message any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockMessageRepo)(nil).Save), message)
}
