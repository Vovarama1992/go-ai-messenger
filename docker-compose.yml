version: '3.8'

services:
  postgres:
    image: postgres:15
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  ai-service:
    build:
      context: .
      dockerfile: ai-service/Dockerfile
    env_file:
      - .env
    depends_on:
      - kafka
    ports:
      - "${AI_SERVICE_PORT}:${AI_SERVICE_PORT}"

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
    ports:
      - "${USER_GRPC_PORT}:${USER_GRPC_PORT}"

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    env_file:
      - .env
    depends_on:
      - user-service
    ports:
      - "${AUTH_HTTP_PORT}:${AUTH_HTTP_PORT}"
      - "${AUTH_GRPC_PORT}:${AUTH_GRPC_PORT}"

  chat-service:
    build:
      context: .
      dockerfile: chat-service/Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
      - auth-service
    ports:
      - "${CHAT_HTTP_PORT}:${CHAT_HTTP_PORT}"
      - "${CHAT_GRPC_PORT}:${CHAT_GRPC_PORT}"

  message-service:
    build:
      context: .
      dockerfile: message-service/Dockerfile
    env_file:
      - .env
    depends_on:
      - postgres
      - kafka
    ports:
      - "${MESSAGE_SERVICE_PORT}:${MESSAGE_SERVICE_PORT}"

  ws-gateway-1:
    build:
      context: .
      dockerfile: ws-gateway/Dockerfile
    env_file:
      - ws-gateway-1.env
    depends_on:
      - kafka
      - auth-service
    ports:
      - "8083:8083"

  ws-gateway-2:
    build:
      context: .
      dockerfile: ws-gateway/Dockerfile
    env_file:
      - ws-gateway-2.env
    depends_on:
      - kafka
      - auth-service
    ports:
      - "8084:8084"

  ws-ai-advice:
    build:
      context: .
      dockerfile: ws-ai-advice/Dockerfile
    env_file:
      - .env
    depends_on:
      - kafka
    ports:
      - "${WS_AI_ADVICE_PORT}:${WS_AI_ADVICE_PORT}"

volumes:
  postgres_data: